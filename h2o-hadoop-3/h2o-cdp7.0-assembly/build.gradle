ext {
    hadoopVersion = 'cdh6.3.0'
    hadoopMavenArtifactVersion = '3.0.0-cdh6.3.0'
    orcSupported = true
    orcHiveExecVersion = "2.1.1-cdh6.3.0"
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

description = 'H2O HDFS client shadowjar for Hadoop ' + hadoopVersion

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    compile.exclude group: 'org.apache.hadoop'
    compile.exclude group: 'org.apache.hive'
}

dependencies {
    compile (project(":h2o-jetty-9")) {
        exclude module: "servlet-api"
        exclude group: "javax.servlet", module: "javax.servlet-api"
    }
    compile(project(":h2o-mapreduce-generic")) {
        transitive = false
    }
    compile project(":h2o-security")
    compileOnly "org.apache.hadoop:hadoop-client:$hadoopMavenArtifactVersion"
    compileOnly "org.apache.hadoop:hadoop-mapreduce-client-app:$hadoopMavenArtifactVersion"
    // Libraries need for Google Cloud Storage strongly require this Guava version
    compile('com.google.guava:guava:20.0') {force = true}
    compile(project(':h2o-app')) {
        exclude module: "${defaultWebserverModule}"
        exclude module: "h2o-ext-krbstandalone"
    }
    compile project(":h2o-web")
    compile project(":h2o-avro-parser")
    // Include GCS persist layer
    compile(project(":h2o-persist-gcs"))
    // Include S3 persist layer
    compile(project(":h2o-persist-s3"))
    // Include HDFS persist layer
    compile (project(':h2o-persist-hdfs')) {
        transitive = false
    }
    compile (project(':h2o-hive')) {
        transitive = false
    }

    // For standalone mode to work with MapR, this extra library needs to be
    // included, and it's not pulled in by the dependency stuff;  this must
    // be a bug in MapR's packaging process.
    if (project.hasProperty("maprExtraDependency")) {
        compile(project.property("maprExtraDependency"))
    }
    if (orcSupported) {
        compile(project(":h2o-orc-parser")) {
            // We do not get any dependencies but directly rely on provided environment
            transitive = false
        }

        // Here we depends on hive-exec, but it is Hadoop version specific
        compile("org.apache.hive:hive-exec:$orcHiveExecVersion") {
            transitive = false
        }
    }
    compile(project(":h2o-parquet-parser"))
}

//
// Bundle optional modules
// The process is defined by convention. There are two flags:
//  - -Pwith${componentName}=true - enables component "componentName" and includes it in assembly
//  - -P${componentName}Version=3.14 - overrides default component version
//
for (comp in optionalComponents) {
    def compName = comp['name']
    def compVersion = comp['version']
    def compEnabled = comp['enabled']
    def compPropName = "with${compName.capitalize()}"
    def compPropVersionName = "${compName}Version"

    if (!project.hasProperty(compPropVersionName)) {
        project.ext.set(compPropVersionName, compVersion)
    }
    if (compEnabled || project.hasProperty(compPropName) && project.property(compPropName)) {
        logger.lifecycle("== ${project.path}: Using optional component: ${compName}, version ${project.findProperty(compPropVersionName)}")
        apply from: "$rootDir/gradle/components/${compName}.gradle"
    }

}

def hadoopShadowJarExcludes = ['META-INF/*.DSA',
                               'META-INF/*.SF',
                               'synchronize.properties',
                               'uploader.properties',
                               'test.properties',
                               'cockpitlite.properties',
                               'devpay_products.properties',
                               // the license files are excluded for OS X compatibility (this is mainly for development)
                               // OS X is unable to unpack these files from the jar on filesystem that is not case sensitive
                               'LICENSE', 'license', 'LICENSE/*', 'license/*', 'META-INF/license', 'META-INF/LICENSE'
]

shadowJar {
    mergeServiceFiles()
    // Keep JODATIME shadowed even for CDH 6+
    relocate 'org.joda.time', 'ai.h2o.org.joda.time'
    exclude hadoopShadowJarExcludes
    relocate 'com.google.common', 'ai.h2o.com.google.common'
    baseName = 'h2odriver'
    classifier = ''
    manifest {
        attributes 'Main-Class': 'water.hadoop.h2odriver'
    }
    zip64 true
}

artifacts {
    archives shadowJar
}

// We just need Shadow Jar
jar {
    enabled = false
}

build.dependsOn shadowJar
